---
# tasks file for k8s_master


- name: Creating a repository file for Kubernetes
  file:
   path: /etc/yum.repos.d/kubernetes.repo
   state: touch

- name: Set up the kubernetes repository.
  copy:
    dest: /etc/yum.repos.d/kubernetes.repo
    content: |
        [kubernetes]
        name=Kubernetes
        baseurl=https://packages.cloud.google.com/yum/repos/kubernetes-el7-x86_64     
        enabled=1
        gpgcheck=1
        repo_gpgcheck=1
        gpgkey=https://packages.cloud.google.com/yum/doc/yum-key.gpg https://packages.cloud.google.com/yum/doc/rpm-package-key.gpg
        exclude=kubelet kubeadm kubectl
    
- name: Installing Docker & kubeadm on Master Node
  dnf:
    name:
      - kubeadm
      - kubectl
      - iproute-tc
    state: present

- name: Staring & enabling cri-o & kubelet on Master Node
  systemd:
   name: "{{ item }}"    
   state: started
   enabled: yes
   masked: no
   daemon_reload: yes
  become: yes
  with_items: "{{ service_names }}"

- name: "Turn off swap"
  shell: "swapoff -a"


- name: "Cmmenting Swap in /etc/fstab file"
  replace:
    path: /etc/fstab
    regexp: '^[^#](.*swap*)'
    replace: '#\1'  

- name: "Updating config file"
  copy: 
    dest: /etc/sysctl.d/k8s.conf
    content: |
            net.bridge.bridge-nf-call-ip6tables = 1
            net.bridge.bridge-nf-call-iptables = 1
            net.ipv4.ip_forward                 = 1

- name: "Changing parameters for kernel"
  command: "sysctl --system"

- name: "Allow Network Ports in Firewalld 1"
  firewalld:
    permanent: yes
    immediate: yes
    port: "{{item.port}}/{{item.proto}}"
    state: enabled 
  with_items: "{{ ports }}"

- name: Enabling Bridge Firewall Rule
  shell: "echo '1' > /proc/sys/net/bridge/bridge-nf-call-iptables"




- name: Pulling images required for setting up a Kubernetes cluster
  shell: kubeadm config images pull

- name: FirewallD rules worker
  firewalld:
    permanent: yes
    immediate: yes
    rich_rule: "{{ item }}"
    state: enabled
  with_items:
   - 'rule family=ipv4 source address=192.168.1.45/32 accept'
    

- name: Allow Network Ports in Firewalld
  firewalld:
   port: "{{item.port}}/{{item.proto}}"
   state: enabled
   permanent: yes
   immediate: yes
  with_items: "{{ ports_master }}"

- name: Enabling Bridge Firewall Rule
  shell: "echo '1' > /proc/sys/net/bridge/bridge-nf-call-iptables"

- name: reload
  service:
    name: firewalld
    state: reloaded
  
- name: Initializing Kubernetes cluster
  shell: kubeadm init --ignore-preflight-errors=NumCPU --pod-network-cidr={{cidr_v}}
  

- name: Copying required files
  shell: |
   mkdir -p $HOME/.kube
   sudo cp -i /etc/kubernetes/admin.conf $HOME/.kube/config
   sudo chown $(id -u):$(id -g) $HOME/.kube/config

- name: setup flannel
  shell:
          cmd:  "kubectl apply -f https://raw.githubusercontent.com/coreos/flannel/master/Documentation/kube-flannel.yml"  
  ignore_errors: yes

- name: Creating token for Slave
  command: kubeadm token create  --print-join-command
  register: token

- name: Storing Logs and Generated token for future purpose.
  local_action: copy content={{ token.stdout }} dest={{ token_file }}
  
- name: Cleaning Caches on RAM
  shell: echo 3 > /proc/sys/vm/drop_caches
